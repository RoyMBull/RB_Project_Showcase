/** Wireless Transmitter/Reciever Module 
 * DOWNLOAD THE nRF24LO1 MODULE FROM HERE: https://github.com/maniacbug/RF24
 * Extract it to the libraries folder of the arduino IDE, located in Documents > Arduino > libraries 
 * VIDEO EXAMPLE: https://www.youtube.com/watch?v=1ibAiPNeQSI 

    Board Setup: (SEE THE IMAGE ATTATCHED)
        # Connect the first pin to ground
        # Connect the second pin to the 3.3v pin of the arduino (DO NOT USE 5V OR IT WILL DESTROY THE MODULE)
        # Connect the 3rd pin to digital pin 7 of the arduino (can be others if desired)
        # Connect the 4th pin to the digital 8 pin of the arduino (can also be others if desired)
        # Connect the 5th pin to the digital 13 pin of the arduino 
        # Connect the 6th pin to the digital 11 pin of the arduino 
        # Connect the 7th pin to the digital 12 pin of the arduino
        # Connect the 8th pin to the 

        radio.stopListening() // This sets the wireless tranciever module as transmitter
        radio.startListening() // This sets the wireless tranciever module as reciever

**/

#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>

RF24 radio(7, 8); //Radio object

const byte DataChannel[][6] = {"00001", "00002"}; //address of the communication channel of the transmitter

//Commands
//TakeOff, Land
const char TakeOff[] = "1";
const char Land[] = "0";
//FORWARD, BACKWARD, LEFT, RIGHT
const char Forward[] = "8";
const char Backward[] = "2";
const char Left[] = "4";
const char Right[] = "6";
//ClockWise, Counter-ClockWise, Up, Down 
const char ClockWise[] = "9";
const char CounterCW[] = "7";
const char Up[] = "5";
const char Down[] = "3";

//Responses
char ResponseData[35] = "";

int UserInput;

void setup()
{   
    Serial.begin(9600);
    radio.begin(); //Begins radio communicationn
    radio.openWritingPipe(DataChannel[1]); // Writes data to a defined address
    radio.openReadingPipe(1, DataChannel[0]); // Recieves response data 
    radio.setPALevel(RF24_PA_MIN); //Power Amplifier level
}

void loop()
{
    //Begin Serial Communication from the computer (Input Option)
    while(Serial.available() == 0){}

    UserInput = Serial.read() - '0';

    Serial.println(UserInput);

    if (UserInput == 1)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&TakeOff, sizeof(TakeOff));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }

    if (UserInput == 0)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&Land, sizeof(Land));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }

    if (UserInput == 8)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&Forward, sizeof(Forward));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }

    if (UserInput == 2)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&Backward, sizeof(Backward));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }

    if (UserInput == 4)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&Left, sizeof(Left));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }

    if (UserInput == 6)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&Right, sizeof(Right));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }

    if (UserInput == 5)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&Up, sizeof(Up));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }

    if (UserInput == 3)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&Down, sizeof(Down));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }

    if (UserInput == 7)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&CounterCW, sizeof(CounterCW));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }

    if (UserInput == 9)
    {
       Serial.println("Sending data....");
       radio.stopListening();
       bool RadioData = radio.write(&ClockWise, sizeof(ClockWise));
       delay(10);

       if (RadioData == true)
       {
          Serial.println("Data Sent!");
          radio.startListening();
          
          if (radio.available())
          {
            radio.read(&ResponseData, sizeof(ResponseData));   
            Serial.println(ResponseData);                    
          }
       }      
    }
}