import socket
import urllib.request
from urllib.parse import urlparse
from urllib.request import urlopen
import queue
import os 
import sys
import paramiko
import threading
import ctypes
import time
import http.cookiejar
import win32com.client #Use the following command to install this module: => python -m pip install pywin32
from netaddr import IPNetwork, IPAddress #Use the following command to install this module: => pip install netaddr to install this
from html.parser import HTMLParser
import http.server
import socketserver
WindowsClassObject = '{9BA05972-F6AB-11CF-A442-00A0C90A8F39}' #The class ID for Internet Explorer

#This code is meant to request Informaton from a HTTP Server and record the data

HTTPClient = http.client.HTTPConnection('localhost:8080')

print("CONNECTION ESTABLISHED. Enter dir, to see the directories")
print("")
print("COMMANDS")
print("GET REQUEST: => get")
print("POST REQUEST: => post")
print("PUT REQUEST: => put")

while True:

    RequestType = input("Enter your request now: => ")
    
    if RequestType == "get":
        
        #Request information from the HTTP Server
        Url = input("Search Bar: => ")
        GetURL = "/" + Url
        HTTPClient.request("GET ", GetURL)

        #Record resposne
        Response = HTTPClient.getresponse()

        if Response.status == 200:
       
            print("")
            print("PAGE FOUND ", "HTTP-CODE: => ", Response.status, " Response Reason: => ", Response.reason)
    
        if Response.status == 404:
        
            print("")
            print("ERROR: => ", Response.status, " " , Response.reason)


        print("")
        Data = Response.read()
        DecodeData = Data.decode('utf-8')
        print("CONTENTS: Check Contents.txt to also read")
        RecordData = open("Contents.txt", 'w')
        RecordData.write(DecodeData)
        RecordData.close()
        print(Data)
        print("")

    elif RequestType == "post":
        
        #Post information to the server 
        DataPost = input("Enter information to enter here")
        HTTPClient.request("POST", "", DataPost)

        #Record resposne
        Response = HTTPClient.getresponse()
    
        if Response.status == 200:
       
            print("")
            print("PAGE FOUND ", "HTTP-CODE: => ", Response.status, " Response Reason: => ", Response.reason)
    
        if Response.status == 404:
        
            print("")
            print("ERROR: => ", Response.status, " " , Response.reason)

    elif RequestType == "put":

        #Create or alter a resource/PUT with information
        fILEaLter = input("Resource to cread or modify")
        fILEaLterPaTH = "/" + fILEaLter
        Conts = input("Enter/or Copy Contents here")
        HTTPClient.request("PUT", fILEaLterPaTH, Conts)

        #Record resposne
        Response = HTTPClient.getresponse()

        if Response.status == 200:
           
            print("")
            print("PAGE FOUND ", "HTTP-CODE: => ", Response.status, " Response Reason: => ", Response.reason)
    
        if Response.status == 404:
        
            print("")
            print("ERROR: => ", Response.status, " " , Response.reason)

    elif RequestType == "done":
        
        Msg = "Client Closing the Connection"
        EncodeMsg = str.encode(Msg)
        HTTPClient.send(EncodeMsg)

    else:

        #Print Invalid Command
        print("INVALID COMMAND")