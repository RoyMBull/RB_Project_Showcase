import socket
import urllib.request
from urllib.request import urlopen
import queue
import os 
import sys
import paramiko
import threading
import ctypes
import time
from netaddr import IPNetwork, IPAddress


#This technique is used to obtain standard information from web servers, but we are identified as python bots
def UrlOpen():
    #Select our URL target
    UrlTarget = input("Enter the name of the website you wish to target: => ")

    Target = urlopen("https://" + UrlTarget)
    print(Target.read())

#This technique is used to mask as a header on a web page to request more information from a website 
def UrlRequest():
    #Select our URL target
    UrlTarget = input("Enter the name of the website you wish to target: => ")
    URLHandle = "https://" + UrlTarget + "/search?q=python"
    headers = {}
    headers['User-Agent'] = "Googlebot"

    Request = urllib.request.Request(URLHandle, headers=headers)
    Response = urllib.request.urlopen(Request)
    ResponseData = Response.read()

    saveFile = open('withHeaders.txt','w')
    saveFile.write(str(ResponseData))
    saveFile.close()
   
#This technique is used to que information about a directory from a web server/web application we know about
def MappingURLDirectories():
    threads = 10
    
    target = "https://www.blackhatpython.com"
    directory = "/Users/justin/Downloads/joomla-3.1.1"
    filters = [".jpg", ".gif", "png", ".css"]

    os.chdir(directory)
    web_paths = Queue.Queue()

    for r, d, f in os.walk("."):
        for files in f:
            remote_path = "%s/%s" % (r, files)
            if remote_path.startswith("."):
                remote_path = remote_path[1:]
            if os.path.splitext(files)[1] not in filters:
                web_paths.put(remote_path)

    while not web_paths.empty():
        path = web_paths.get()
        url = "%s%s" % (target, path)

        request = urllib.request.Request(url)

        response = urlopen(request)
        content = response.read()

        print(response.code, path)
        response.close()
UrlRequest()





